- 👋 Hi, I’m @Kong017
- 👀 I’m interested in ...
- 🌱 I’m currently learning ...
- 💞️ I’m looking to collaborate on ...
- 📫 How to reach me ...
- 😄 Pronouns: ...
- ⚡ Fun fact: ...

<!---
Kong017/Kong017 is a ✨ special ✨ repository because its `README.md` (this file) appears on your GitHub profile.
You can click the Preview link to take a look at your changes.
--->
 
#include <iostream>
#include <iomanip>
#include <ctime>
#include <chrono>
#include <thread>
using namespace std;
class domain {
public:

    static int offset;

 static   void updateClock() {
    while (true) {
        // Get current time
        time_t now = time(nullptr);
        tm *currentTime = localtime(&now);
        // Move cursor to the beginning of the line
        cout << "\r";
        // Display current time
        cout << "Time: ";
//        int offset = getoffset();
        cout << setfill('0') << setw(2) << currentTime->tm_hour+offset << ":"
             << setw(2) << currentTime->tm_min << ":"
             << setw(2) << currentTime->tm_sec ;
        // Flush the output buffer to make sure it's printed immediately
        cout.flush();
        // Wait for 1 second before updating the clock again
        this_thread::sleep_for(chrono::seconds(1));
    }
 }
 static   void updateClock2( int offset) {
    while (true) {
        // Get current time
        time_t now = time(nullptr);
        tm *currentTime = localtime(&now);
        // Move cursor to the beginning of the line
        cout << "\r";
        // Display current time
        cout << "\t\tThailand: ";
        cout << setfill('0') << setw(2) << currentTime->tm_hour+offset << ":"
             << setw(2) << currentTime->tm_min << ":"
             << setw(2) << currentTime->tm_sec;
        // Flush the output buffer to make sure it's printed immediately
        cout.flush();
        // Wait for 1 second before updating the clock again
        this_thread::sleep_for(chrono::seconds(1));
    }
 }
 static void checkhead(){
     int timecheck;
     while(true){
      cout<<"\t\t\t" <<timecheck++;   
         // Flush the output buffer to make sure it's printed immediately
        cout.flush();
        // Wait for 1 second before updating the clock again
        this_thread::sleep_for(chrono::seconds(1));
       }
 }
};

int domain::offset=3;
int main(){
        domain doit;
        domain doit2;




         // Start a separate thread to update the clock
        thread clockThread(doit.updateClock);
        thread clockThread2(doit.updateClock2,7);
        // Wait for the clock thread to finish (which will never happen in this case)
        clockThread.join();
        clockThread2.join();
        return 0;
}

